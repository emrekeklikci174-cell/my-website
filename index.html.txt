from flask import Flask, request, redirect, session, render_template_string
import sqlite3, re

app = Flask(__name__)
app.secret_key = "secret_key123"

# Veritabanı oluştur
conn = sqlite3.connect('users.db')
c = conn.cursor()
c.execute('''CREATE TABLE IF NOT EXISTS users (email TEXT PRIMARY KEY, password TEXT)''')
conn.commit()
conn.close()

# Küfür filtresi
def filter_message(msg):
    if re.search(r"küfür|lan|aptal", msg, re.I):
        return "Corhea: Küfür edemem"
    else:
        return f"Corhea: {msg}?"

# Tek dosya içinde HTML şablonları
register_html = """
<!DOCTYPE html>
<html>
<head><title>Corhea Kayıt</title></head>
<body>
<h2>Kayıt Ol</h2>
<form method="POST">
<input type="email" name="email" placeholder="E-posta" required><br>
<input type="password" name="password" placeholder="Şifre" required><br>
<button type="submit">Kayıt Ol</button>
</form>
<p>Zaten üye misiniz? <a href="/login">Giriş Yap</a></p>
</body>
</html>
"""

login_html = """
<!DOCTYPE html>
<html>
<head><title>Corhea Giriş</title></head>
<body>
<h2>Giriş Yap</h2>
<form method="POST">
<input type="email" name="email" placeholder="E-posta" required><br>
<input type="password" name="password" placeholder="Şifre" required><br>
<button type="submit">Giriş Yap</button>
</form>
<p>Hesabınız yok mu? <a href="/register">Kayıt Ol</a></p>
</body>
</html>
"""

chat_html = """
<!DOCTYPE html>
<html>
<head>
<title>Corhea Chat</title>
<style>
body { font-family: Arial; background: #f0f0f0; text-align: center; }
#chatbox { width: 80%; height: 300px; border: 1px solid #333; margin: 10px auto; overflow-y: scroll; background: #fff; padding: 5px; }
input[type=text] { width: 70%; padding: 5px; }
button { padding: 5px 10px; }
</style>
</head>
<body>
<h2>Hoşgeldiniz, {{email}}</h2>
<div id="chatbox">{{response}}</div>
<form method="POST" action="/send">
<input type="text" name="message" placeholder="Mesajınızı yazın" autocomplete="off" required>
<button type="submit">Gönder</button>
</form>
<form method="POST" action="/logout">
<button type="submit">Çıkış</button>
</form>
</body>
</html>
"""

# Kayıt route
@app.route('/register', methods=['GET','POST'])
def register():
    if request.method=='POST':
        email = request.form['email']
        password = request.form['password']
        conn = sqlite3.connect('users.db')
        c = conn.cursor()
        try:
            c.execute("INSERT INTO users VALUES (?,?)",(email,password))
            conn.commit()
            session['email'] = email
            return redirect('/')
        except:
            return "Bu e-posta zaten kayıtlı"
    return render_template_string(register_html)

# Giriş route
@app.route('/login', methods=['GET','POST'])
def login():
    if request.method=='POST':
        email = request.form['email']
        password = request.form['password']
        conn = sqlite3.connect('users.db')
        c = conn.cursor()
        c.execute("SELECT * FROM users WHERE email=? AND password=?",(email,password))
        user = c.fetchone()
        if user:
            session['email'] = email
            return redirect('/')
        else:
            return "E-posta veya şifre yanlış"
    return render_template_string(login_html)

# Ana sohbet route
@app.route('/')
def home():
    if 'email' in session:
        return render_template_string(chat_html, email=session['email'], response="")
    return redirect('/login')

# Mesaj gönderme
@app.route('/send', methods=['POST'])
def send_message():
    if 'email' not in session:
        return redirect('/login')
    msg = request.form['message']
    response = filter_message(msg)
    return render_template_string(chat_html, email=session['email'], response=response)

# Çıkış yapma
@app.route('/logout', methods=['POST'])
def logout():
    session.pop('email', None)
    return redirect('/login')

if __name__ == "__main__":
    app.run(debug=True)
